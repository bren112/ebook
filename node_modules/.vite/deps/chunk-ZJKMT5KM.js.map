{
  "version": 3,
  "sources": ["../../@supabase/node-fetch/browser.js"],
  "sourcesContent": ["\"use strict\";\r\n\r\n// ref: https://github.com/tc39/proposal-global\r\nvar getGlobal = function() {\r\n    // the only reliable means to get the global object is\r\n    // `Function('return this')()`\r\n    // However, this causes CSP violations in Chrome apps.\r\n    if (typeof self !== 'undefined') { return self; }\r\n    if (typeof window !== 'undefined') { return window; }\r\n    if (typeof global !== 'undefined') { return global; }\r\n    throw new Error('unable to locate global object');\r\n}\r\n\r\nvar globalObject = getGlobal();\r\n\r\nexport const fetch = globalObject.fetch;\r\n\r\nexport default globalObject.fetch.bind(globalObject);\r\n\r\nexport const Headers = globalObject.Headers;\r\nexport const Request = globalObject.Request;\r\nexport const Response = globalObject.Response;\r\n"],
  "mappings": ";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAGI,WAUA,cAES,OAEN,iBAEM,SACA,SACA;AArBb;AAAA;AAGA,IAAI,YAAY,WAAW;AAIvB,UAAI,OAAO,SAAS,aAAa;AAAE,eAAO;AAAA,MAAM;AAChD,UAAI,OAAO,WAAW,aAAa;AAAE,eAAO;AAAA,MAAQ;AACpD,UAAI,OAAO,WAAW,aAAa;AAAE,eAAO;AAAA,MAAQ;AACpD,YAAM,IAAI,MAAM,gCAAgC;AAAA,IACpD;AAEA,IAAI,eAAe,UAAU;AAEtB,IAAM,QAAQ,aAAa;AAElC,IAAO,kBAAQ,aAAa,MAAM,KAAK,YAAY;AAE5C,IAAM,UAAU,aAAa;AAC7B,IAAM,UAAU,aAAa;AAC7B,IAAM,WAAW,aAAa;AAAA;AAAA;",
  "names": []
}
